<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적리소스를 연결하는 부분 -->
	<resources mapping="/images/**" location="/WEB-INF/static/images/" />
	<resources mapping="/common/**" location="/WEB-INF/static/common/" />
	<resources mapping="/gathering/images/**" location="/WEB-INF/gathering/images/" />
	<resources mapping="/gathering/boardimages/**" location="/WEB-INF/gathering/boardimages/" />
	<resources mapping="/main/images/**" location="/WEB-INF/main/images/" />
	<resources mapping="/static/**" location="/WEB-INF/static/" />
	<resources mapping="/css/**" location="/WEB-INF/assets/css/" />
	<resources mapping="/member/memimg/**" location="/WEB-INF/member/memimg/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- tiles설정 파일을 읽어서 등록한 대로 뷰를 만들어 낼 수 있도록 등록 -->
	<!-- 1. tiles설정 파일을 읽어올 수 있도록 설정 파일을 등록 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<!-- <beans:value>/WEB-INF/config/main-tiles.xml</beans:value> -->
				<!-- 앞으로는 모든 설정 파일을 인식할 수 있도록 아래와 같이 설정해준다. -->
				<beans:value>/WEB-INF/**/*-tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 2. tiles 프레임워크 기반으로 뷰를 만들 수 있도록 ViewResolver등록 -->
	<beans:bean id="tilesViewResolver"
	class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" 
		value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- 3. mybatis사용을 위해 등록 -->
	<!-- 1) connection관리를 담당하는 객체 -->
	<beans:bean id="ds"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/myspring"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean>
	<!-- 2) spring에서 mybatis의 핵심클래스인 SqlSession을 사용할 수 있도록 생서하는 객체 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>
		<beans:property name="configLocation" value="/WEB-INF/config/mybatis-config.xml"/>
	</beans:bean>
	<!-- 3) mybatis의 핵심클래스를 등록 -->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>	
	
	<!-- validation -->
	<beans:bean id="validation"
	 class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>	
	
	<context:component-scan base-package="gathering" />
	<context:component-scan base-package="main" />
	<context:component-scan base-package="board" />
	<context:component-scan base-package="home" />
	<context:component-scan base-package="member" />
	<context:component-scan base-package="damoim" />
	<context:component-scan base-package="image" />
	<context:component-scan base-package="moim" />
	<context:component-scan base-package="job" />
	<context:component-scan base-package="business" />
	<context:component-scan base-package="location" />
	<context:component-scan base-package="interest" />
</beans:beans>
